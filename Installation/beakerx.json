{
  "labels": {
    "HAPROXY_0_REDIRECT_TO_HTTPS": "true",
    "HAPROXY_GROUP": "external",
    "HAPROXY_0_ENABLED": "true",
    "MARATHON_SINGLE_INSTANCE_APP": "true",
    "HAPROXY_0_VHOST": "vhost.example.com"
  },
  "id": "/beakerx",
  "backoffFactor": 1.15,
  "backoffSeconds": 1,
  "cmd": "mv /mnt/mesos/sandbox/beakerx-sparkmagic-conda-env.yml /home/conda/work && /usr/local/bin/notebook.sh",
  "container": {
    "type": "MESOS",
    "volumes": [],
    "docker": {
      "image": "vishnumohan/beakerx-sparkmagic-dcos:0.11.1-1.10.4-2.2.1",
      "forcePullImage": false,
      "parameters": []
    }
  },
  "cpus": 4,
  "disk": 0,
  "env": {
    "TERM": "xterm-256color",
    "SPARKMAGIC_CONF_FILE": "/mnt/mesos/sandbox/sparkmagic-dcos-config.json",
    "SPARKMAGIC_CONF_DIR": "/mnt/mesos/sandbox"
  },
  "fetch": [
    {
      "uri": "https://s3.amazonaws.com/vishnu-mohan/sparkmagic/sparkmagic-dcos-config.json",
      "extract": false,
      "executable": false,
      "cache": false
    },
    {
      "uri": "https://raw.githubusercontent.com/markfjohnson/dcos_data_science/master/Installation/beakerx-sparkmagic-conda-env.yml",
      "extract": true,
      "executable": false,
      "cache": false
    }
  ],
  "healthChecks": [
    {
      "gracePeriodSeconds": 30,
      "intervalSeconds": 20,
      "maxConsecutiveFailures": 3,
      "portIndex": 0,
      "timeoutSeconds": 10,
      "delaySeconds": 15,
      "protocol": "MESOS_HTTP",
      "path": "/api"
    }
  ],
  "instances": 1,
  "maxLaunchDelaySeconds": 3600,
  "mem": 2048,
  "gpus": 0,
  "networks": [
    {
      "mode": "host"
    }
  ],
  "portDefinitions": [
    {
      "labels": {
        "VIP_0": "/beakerx:8888"
      },
      "name": "jupyter",
      "protocol": "tcp",
      "port": 10101
    }
  ],
  "requirePorts": false,
  "upgradeStrategy": {
    "maximumOverCapacity": 0,
    "minimumHealthCapacity": 0
  },
  "killSelection": "YOUNGEST_FIRST",
  "unreachableStrategy": {
    "inactiveAfterSeconds": 0,
    "expungeAfterSeconds": 0
  },
  "constraints": []
}